!/bin/bash
#
# INSTALL PocketFEATURE
# =====================
# 
# RUNNING THIS SCRIPT WILL ATTEMPT TO AUTOMATICALLY INSTALL
# sudo ./INSTALL
#
# Installing PocketFEATURE requires installing two packages:
# pyFEATURE, a set of wrappers and tools for working with FEATURE data
# and PocketFEATURE itself.
#
# Both installations are simple Python setup scripts.
#
# First install pyFEATURE:
# ------------------------
#
# $ cd pyFEATURE
# $ sudo python setup.py install
# $ cd ../
# 
# Second install PocketFEATURE:
# -----------------------------
#
# $ cd PocketFEATURE
# $ sudo python setup.py install
# $ ../
#
# Then run a test case:
#
#

if [ ! -z $1 ]; then
	SCORES="--raw-scores ${1}.scores"
	ALIGN="--alignment ${1}.align"
fi

echo "Cleaning up old versions"
pip uninstall pyFEATURE PocketFEATURE

set -e

if [ ! -z $VIRTUAL_ENV -a ! -d $VIRTUAL_ENV/lib/python2.7/site-packages/numpy/core/include ]; then
    echo "Fixing Numpy/Virtualenv issues"
    pip install --force-reinstall --upgrade numpy
fi

echo "Checking for FEATURE"
if [ ! $( which featurize ) ]; then
    echo "Warning: featurize not found in PATH. Likely to fail"
    echo "Press Enter to continue..."
    read
fi

echo "Checking FEATURE environment"
if [ -z $FEATURE_DIR ]; then
    echo "Warning: FEATURE_DIR not set. PocketFEATURE will try to guess"
    echo "Note: This can also be solved by calling PocketFEATURE programs"
    echo "      with the --feature-dir argument"
    echo "Press Enter to continue..."
    read
fi
    

echo "INSTALLING pyFEATURE"
cd pyFEATURE
rm -vrf *.egg-info
python setup.py install
cd ../

echo "INSTALLING PocketFEATURE"
cd PocketFEATURE
rm -vrf *.egg-info
python setup.py install
cd ../

echo "RUNNING SANITY TEST"
export PDB_DIR="data"
export DSSP_DIR="data"

if [ ! -z $1 ]; then
run_pf data/1qhx.pdb data/1qhx.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --scale-method=evalue \
       --pdb-dir=data \
       --dssp-dir=data \
       --ffA=${1}-1-A.ff \
       --ffB=${1}-1-B.ff \
       --raw-scores=${1}-1.scores \
       --alignment=${1}-1.align

run_pf data/1qhx.pdb data/1qrd.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --scale-method=evalue \
       --pymolA=/tmp/1qhx.py \
       --pymolB=/tmp/1qrd.py \
       --pdb-dir=data \
       --dssp-dir=data \
       --raw-scores=${1}-2.scores \
       --alignment=${1}-2.align

run_pf data/1qhx.pdb data/1kmi.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --scale-method=evalue \
       --pdb-dir=data \
       --dssp-dir=data \
       --raw-scores=${1}-3.scores \
       --alignment=${1}-3.align

run_pf data/1kmi.pdb data/1alu.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --scale-method=evalue \
       --pdb-dir=data \
       --dssp-dir=data \
       --raw-scores=${1}-4.scores \
       --alignment=${1}-4.align
else
run_pf data/1qhx.pdb data/1qhx.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --pdb-dir=data \
       --dssp-dir=data

run_pf data/1qhx.pdb data/1qrd.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --pymolA=/tmp/1qhx.py \
       --pymolB=/tmp/1qrd.py \
       --pdb-dir=data \
       --dssp-dir=data 

run_pf data/1qhx.pdb data/1kmi.pdb \
       -b data/background.ff \
       -n data/background.coeffs \
       --pdb-dir=data \
       --dssp-dir=data
fi

#echo "Attempting to visualize"
#if [ $( which pymol ) ]; then
#    pymol -l /tmp/1qhx.py &
#    pymol -l /tmp/1qrd.py &
#else
#    echo "PyMol not found in PATH. Cannot display alignment"
#    echo "pymol -l /tmp/1qhx.py &"
#    echo "pymol -l /tmp/1qrd.py &"
#fi
